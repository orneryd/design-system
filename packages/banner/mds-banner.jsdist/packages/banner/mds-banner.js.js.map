{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@mcklabs/web-components/src/bind-events.js","webpack:///./node_modules/@mcklabs/web-components/src/setup-connect.js","webpack:///./node_modules/@mcklabs/web-components/src/utils.js","webpack:///./node_modules/@mcklabs/web-components/templates.js","webpack:///./packages/banner/mds-banner.html","webpack:///./packages/banner/mds-banner.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,OAAO,SAAS,GAAG,mBAAO,CAAC,oEAAS;AACpC;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oFAAoF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,eAAe,WAAW,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2CAA2C;AAC1F,OAAO;AACP;AACA,qDAAqD,gBAAgB;AACrE,uBAAuB,kBAAkB;AACzC;AACA;AACA,0CAA0C,kBAAkB,wBAAwB,iBAAiB;AACrG;AACA;AACA,OAAO;AACP,0CAA0C,eAAe,WAAW,KAAK;AACzE,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,SAAS,yEAAyE,KAAK;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,aAAa,SAAS,yEAAyE,KAAK;AACpG;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B,aAAa,OAAO,uCAAuC;AAC3D,gCAAgC;AAChC;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,gEAAgE,sDAAsD;AACtH;AACA,aAAa;AACb;AACA;AACA;AACA,qDAAqD;AACrD,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,iCAAiC;AACjC;AACA,WAAW,SAAS;AACpB;AACA;AACA,IAAI;AACJ;AACA,iCAAiC;AACjC;AACA,WAAW,SAAS;AACpB;AACA;AACA,iCAAiC;AACjC;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,QAAQ;AACR,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7PA,mBAAmB,mBAAO,CAAC,oFAAmB;AAC9C,qBAAqB,mBAAO,CAAC,wFAAqB;;AAElD;AACA;AACA;AACA;;;;;;;;;;;;ACNA,OAAO,yBAAyB,GAAG,mBAAO,CAAC,8FAAmC,EAAE,yBAAyB,KAAK,gEAAgE,mBAAmB,uBAAuB,2BAA2B,sBAAsB,EAAE,OAAO,uBAAuB,0BAA0B,uBAAuB,EAAE,kLAAkL,0BAA0B,sFAAsF,kC;;;;;;;;;;;;ACA9nB;AAAA;AAAA;AAAA;AAA4C;;AAE7B;AACf;AACA;AACA,uBAAuB,eAAe;AACtC;;AAEA;AACA,IAAI,uDAAY;AAChB;AACA;;AAEA","file":"./packages/banner/mds-banner.jsdist/./packages/banner/mds-banner.js.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/banner/mds-banner.js\");\n","const {template} = require('./utils');\n/**\n * @param {HTMLElement} root The root element to find all elements from.\n * @param {Object} context the context object for finding functions to bind against. default is the root element\n * @return {HTMLElement} the root element passed in.\n * @description helper function used by the loader when importing html files as a template fucntion\n * for using attributes such as \"onclick\" within your html templates.\n * You do not need to call this yourself if you are importing your html files using the loader\n *\n * @example\n * The event handler method signature is the exact same as standard HTML5 event handlers.\n * [standard HTML5 event handlers]{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener}.\n *\n * Supported html5 events:\n * [onabort], [onafterprint], [onbeforeonload], [onbeforeprint], [onblur], [oncanplay], [oncanplaythrough], [onchange],\n * [onclick], [oncontextmenu], [ondblclick], [ondrag], [ondragend], [ondragenter], [ondragleave], [ondragover],\n * [ondragstart], [ondrop], [ondurationchange], [onemptied], [onended], [onerror], [onfocus], [onformchange],\n * [onforminput], [onhaschange], [oninput], [oninvalid], [onkeydown], [onkeypress], [onkeyup], [onload], [onloadeddata],\n * [onloadedmetadata], [onloadstart], [onmessage], [onmousedown], [onmousemove], [onmouseout], [onmouseover],\n * [onmouseup], [onmousewheel], [onoffline], [ononline], [onpagehide], [onpageshow], [onpause], [onplay], [onplaying],\n * [onpopstate], [onprogress], [onratechange], [onreadystatechange], [onredo], [onresize], [onscroll], [onseeked],\n * [onseeking], [onselect], [onstalled], [onstorage], [onsubmit], [onsuspend], [ontimeupdate], [onundo], [onunload],\n * [onvolumechange], [onwaiting]\n * @example @lang html\n * // By using the provided htmlLoader, you can use the ES6 template-literal syntax in on* HTML5 event attributes\n * <mwc-button onclick=\"${this.itemClick}\" label=\"${props.text}\"></mwc-button>\n * // If you are not using the loader, use the string name of the function to execute\n * // that is present on the custom element using the template\n * <mwc-button onclick=\"itemClick\"></mwc-button>\n * // you can also use \"this.\"\n * <mwc-button onclick=\"this.itemClick\"></mwc-button>\n * // you can also refence properties of a member.\"\n * <mwc-button onclick=\"this.someObj.itemClick\"></mwc-button>\n *\n * @example @lang html\n * <!-- list.html: -->\n * <p id=\"selected-item-text\" style=\"display:${props.selectedItemText ? 'block' : 'none'};\">\n *   ${props.selectedItemText}\n * </p>\n * <mwc-formfield id=\"input-label\" alignEnd label=\"${this.inputLabel}\">\n *   <input onkeyup=\"${this.onInputKeyUp}\" type=\"text\">\n * </mwc-formfield>\n * <div>\n *   <mwc-button id=\"add-item\" onclick=\"${this.clickHandler}\" disabled=\"disabled\">${this.buttonLabel}</mwc-button>\n * </div>\n * <ul>\n *   ${this.items.map((text) => {\n *     return `<li><mwc-button onclick=\"${this.itemClick}\" label=\"${text}\"></mwc-button></li>`\n *   }).join(\"\")}\n * </ul>\n *\n * @example @lang js\n * // define your custom element.\n * export default class ListComponent extends HTMLElement {\n *   constructor(self) {\n *     super(self);\n *     self = this;\n *     // use the shadow dom for best results.\n *     this.attachShadow({ mode: 'open' });\n *   }\n *\n *   connectedCallback() {\n *       this.shadowRoot.innerHTML = \"\";\n *       listTemplate({\n *           // the html template loader will wire up the event handlers for you if you have defined them in your HTML\n *           onInputKeyUp: () => console.log(\"input contents changed:\", this),\n *           itemClick: () =>  console.log(\"item clicked: \", this),\n *           clickHandler: () =>  console.log(\"button clicked: \", this),\n *           selectedItemText: this.getAttribute('selected-item'),\n *           inputLabel: buttonLabelBlank,\n *           buttonLabel: \"add item to list.\"\n *      }).forEach((node) => this.shadowRoot.appendChild(node));\n *   }\n * }\n * customElements.define('list-component', MainComponent);\n */\nconst bindEvents = (root, context = root) => {\n  if (!root) return;\n  const domElements = Array.from(root.querySelectorAll('*'));\n  domElements.forEach((el) => {\n    Array.from(el.attributes).forEach((attribute) => {\n      if (attribute.name.startsWith('on')) {\n        let fnOrName = template(attribute.value, context);\n        if (typeof context[fnOrName] === 'function') {\n          fnOrName = context[fnOrName];\n        }\n        if (typeof fnOrName === 'function') {\n          el.addEventListener(attribute.name.replace('on', ''), function(...args) {\n            fnOrName.apply(context, args);\n          });\n        }\n        el.removeAttribute(attribute.name);\n      }\n    });\n  });\n  return root;\n};\n\nmodule.exports = bindEvents;\n","module.exports = function(nodeList, context) {\n  nodeList.connect = function(root) {\n    if (!root && context instanceof HTMLElement) {\n      root = context;\n    }\n    if (root instanceof HTMLElement && root.shadowRoot && root.shadowRoot.mode === 'open') {\n      root = root.shadowRoot;\n    } else {\n      root = document.createElement('div');\n    }\n    root.innerHTML = '';\n    nodeList.forEach((node) => root.appendChild(node));\n    return root;\n  };\n  return nodeList;\n};\n","/**\n * @param {String} path\n * @param {Object} obj Object to find the property in\n * @param {String} fb Fallback string when not found\n * @return {*|String} whatever the value from the nested key path is or the default string '${path}'.\n * @description Returns the value of an object via the path as a string\n *\n * @example\n * let result = getFromObj('hello.foo', {\n  *  hello: {\n  *    foo: 'bar'\n  *  }\n  * });\n  *\n  * result == 'bar';\n  */\nconst getFromObj = (path, obj = {}) => {\n  return path && path.split('.').reduce((res, key) => res[key] != null ? res[key] : path, obj);\n};\n\n/**\n  * @param {String} tmpl the string template\n  * @param {Object} map Key/Value pairs to process the string against\n  * @param {String} fallback they string fallback when the value is missing.\n  * @return {*|String} whatever the value from the nested key path is or the default string '${path}'.\n  * @description Processes a string formatted like an ES6 template against an object\n  *\n  * @example\n  * let result = template('I am a string literal formatted ${message.label}.', {\n  *  message: {\n  *    label: 'to look like an ES6 template'\n  *  }\n  * });\n  *\n  * result == 'I am a string literal formatted to look like an ES6 template.';\n  */\nconst template = (tmpl, map, fallback) => {\n  const context = Object.assign({this: map}, map);\n  return getFromObj(stripES6(tmpl, context), context);\n};\n\nconst thisRegex = /^this\\./;\nconst es6Regex = /\\$\\{.+?}/g;\n/**\n  * @param {String} expr The es6 expression\n  * @param {Options|Object} context the context object to find values for tokens.\n  * @return {String} The cleaned sxpression without the ${}.\n  * @description removes the ${} wrapping from an es6 template literal expression.\n  */\nconst stripES6 = function(expr, context) {\n  return expr && expr.replace(es6Regex, (match) => {\n    return getFromObj(match.substr(2, match.length - 3).trim(), context);\n  }).replace(thisRegex, '');\n};\n\n\n/**\n * @function arrayParser\n * @param {Object} val the value to parse\n * @param {String} key the name of the value to parse\n * @param {Object} params all of the parameters that have been parsed so far.\n * @return {Boolean} returns the currently parsed value.\n * @description In the event that the search string has multiple values with the same key\n * it will convert that into an array of those values for the given key.\n *\n * While there is no defined standard in [RFC 3986 Section 3.4]{@link https://tools.ietf.org/html/rfc3986#section-3.4},\n * most web frameworks accept and serialize them in the following manner as outlined\n * in [MSDN]{@link https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms524784(v=vs.90)}\n *\n * @example @lang js\n * window.location.search = '?values=foo&values=bar&values=hello&values=world';\n * const params = toParams(window.location.search, {});\n * console.log(params) // {values: [\"foo\",\"bar\",\"hello\", \"world\"]}\n *\n * @example @lang js\n * window.location.search = '?values=1&values=2&values=3&values=5&values=7';\n * const params = toParams(window.location.search, {\n *     values: parseInt\n * });\n * console.log(params) // {values: [1, 2, 3, 5, 7]}\n *\n * @example @lang js\n * window.location.search = '?answer=42';\n * const params = toParams(window.location.search, {\n *     answer: parseInt\n * });\n * console.log(params) // {answer: 42}\n */\nconst arrayParser = (val, key, params) => {\n  let current = params[key];\n  if (current) {\n    if (!Array.isArray(current)) {\n      current = [current];\n    }\n    current.push(val);\n  } else {\n    current = val;\n  }\n  return current;\n};\n\n/**\n * @function toParams\n * @param {String} str\n * @param {Object} options custom parser functions based on the key name\n * @return {Object} seach params as an object\n * @description Converts URL parameters to a Object collection of key/value pairs\n * Decodes encoded url characters to back to normal strings.\n * @example <caption>convert query string to object:</caption>\n * import {toParams} from '@mcklabs/web-components';\n * let paramsObject = toParams('?foo=bar&hello=world&hello=array&unsafe=I%20am%20an%20unsafe%20string');\n *\n * console.log(paramsObject) // { foo: 'bar', hello: ['world', 'array'], unsafe: 'I am an unsafe string'}\n * @example <caption>pass an optional parser object</caption>\n * import {toParams} from '@mcklabs/web-components';\n * let paramsObject = toParams('?intvals=1&intvals=2&intvals=3', {\n *     intvals: parseInt\n * });\n *\n * console.log(paramsObject) // { intvals: [ 1, 2, 3 ] }\n * @example <caption>without psassing an optional parser object</caption>\n * import {toParams} from '@mcklabs/web-components';\n * let paramsObject = toParams('?intvals=1&intvals=2&intvals=3');\n *\n * console.log(paramsObject) // { intvals: [ \"1\", \"2\", \"3\" ] }\n */\nconst toParams = (str, options = {}) => {\n  const parts = str.split('?');\n  const queryString = parts[1] || '';\n  const params = {};\n  queryString.split('&').forEach((val) => {\n    const innerParts = val.split('=');\n    if (innerParts.length !== 2) return;\n    const paramKey = decodeURIComponent(innerParts[0]);\n    const paramVal = decodeURIComponent(innerParts[1]);\n    const parser = options[paramKey] || (() => paramVal);\n    params[paramKey] = arrayParser(parser(paramVal, paramKey, params), paramKey, params);\n  });\n  return params;\n};\n\n/**\n *\n * @param {Object} options\n * @param {String} base\n * @return {String} the object represented as a query string.\n * @description Converts an Object of String/Value pairs to a query string for URL parameters prepended with the \"base\" character.\n * Encodes unsafe url characters to url safe encodings.\n * @example <caption>convert object to query string</caption>\n *\n * import {toSearch} from '@mcklabs/web-components';\n * let queryString = toSearch({\n *  foo: 'bar',\n *  hello: ['world', 'array'],\n *  unsafe: 'I am an unsafe string'\n *\n * }, '#');\n *\n * queryString == '#?foo=bar&hello=world&hello=array&unsafe=I%20am%20an%20unsafe%20string';\n */\nconst toSearch = (options) => {\n  const filtered = Object.entries(options).filter((ent) => !!ent[1]);\n  return encodeURI(`?${filtered.map((ent) => {\n    if (Array.isArray(ent[1])) {\n      return ent[1].map((val) => [ent[0], val].join('=')).join('&');\n    } else {\n      return ent.join('=');\n    }\n  }).join('&')}`);\n};\n\n/**\n *\n * @param {Object} obj\n * @param {String} prefix\n * @return {Object} The new object with transformed keys.\n * @description Convenience method that converts the keys of an object to have a prefix.\n * This is faster than stringification.\n *\n * @example\n * import {prefixKeys} from '@mcklabs/web-components';\n * let newObj = prefixKeys({\n *  foo: 'bar',\n *  hello: ['world', 'array'],\n *  unsafe: 'I am an unsafe string'\n *\n * }, 'zoo-');\n *\n * newObj == {\n *   'zoo-foo': 'bar',\n *   'zoo-hello': ['world', 'array']',\n *   'zoo-unsafe': 'I am an unsafe string'\n * };\n */\nconst prefixKeys = (obj, prefix) => {\n  let keys = [];\n  if (Array.isArray(obj)) {\n    keys = obj.map((val, i) => i);\n  } else {\n    keys = Object.keys(obj);\n  }\n  return Object.assign(\n      {},\n      ...keys.map((key) => ({[prefix + key]: obj[key]}))\n  );\n};\n\n/**\n *\n * @param {Object} obj\n * @param {Boolean} stringify wether or not to stringify the values for each key.\n * @return {Object} The new object with transformed keys.\n * @description Convenience method that wraps prefixKeys with 'data-' for easier\n * property spreading within other frameworks such as react.\n * This is preferrable over stringifying objects as parsing json is slow in the browser\n * @example <caption>React example</caption>\n * const stringTestData = {\n *  color: \"black and white\",\n *  animal: \"panda\"\n * };\n *\n * const MyComponent = (props) => {\n *   const dataAttrs = toDataAttrs(stringTestData);\n *   return (<div>\n *     <div>\n *       <i18n-message\n *         data-key=\"tokenized.message\"\n *         {...dataAttrs}/>\n *     </div>\n *     <div>\n *       <i18n-message\n *         data-id=\"tokenized.message\"\n *         {...dataAttrs}\n *         data-color=\"red\"/>\n *     </div>\n *   </div>);\n * };\n\nconst dataAttrs = toDataAttrs(stringTestData);\n */\nconst toDataAttrs = (obj) => {\n  return prefixKeys(obj, 'data-');\n};\n\nmodule.exports = {\n  getFromObj,\n  template,\n  stripES6,\n  toParams,\n  arrayParser,\n  toSearch,\n  prefixKeys,\n  toDataAttrs,\n};\n","const bindEvents = require('./src/bind-events');\nconst setupConnect = require('./src/setup-connect');\n\nmodule.exports = {\n  bindEvents,\n  setupConnect,\n};\n","const {bindEvents, setupConnect} = require(\"@mcklabs/web-components/templates\"); module.exports = (p = {})=> { const parsed = new DOMParser().parseFromString(function(props){return \"<style>h1 {\\n  text-align: center;\\n  margin: 0 25% 1rem 25%;\\n  padding-top: 1rem; }\\n\\np {\\n  text-align: center;\\n  margin: 0% 25% 0% 25%;\\n  font-size: 0.65rem; }\\n</style>\\n<link href=\\\"./mds-banner.scss\\\"/> <div> <h1> <slot class=\\\"header\\\" name=\\\"header\\\"></slot> </h1> <p> <slot class=\\\"content\\\" name=\\\"content\\\"></slot> </p> </div> \"}.call(p, p), 'text/html'); const elements = [...parsed.head.children, ...bindEvents(parsed.body, p).childNodes]; return setupConnect(elements, p)}","import renderBanner from './mds-banner.html'\n\nexport default class MdsBanner extends HTMLElement {\n  constructor() {\n    super()\n    this.attachShadow({ mode: 'open' })\n  }\n\n  connectedCallback() {\n    renderBanner(this).connect()\n  }\n}\n\ncustomElements.define('mds-banner', MdsBanner)\n"],"sourceRoot":""}